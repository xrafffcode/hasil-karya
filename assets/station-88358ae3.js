import{P as o,Q as s,b4 as r,b5 as e}from"./index-a69e0c82.js";const c=o({id:"station",state:()=>({stations:[],categories:[],loading:!1,error:null,success:null}),actions:{async fetchStations(a){try{this.loading=!0;const t=await s.get("/stations",{params:a});this.stations=t.data.data}catch(t){this.handleError(t)}finally{this.loading=!1}},async fetchStationCategories(){try{this.loading=!0;const a=await s.get("/station/read/categories");this.categories=a.data.data}catch(a){this.handleError(a)}finally{this.loading=!1}},async fetchStationCategoriesWithoutGas(){try{this.loading=!0;const a=await s.get("/station/read/categories");return this.categories=a.data.data.filter(t=>t.name!=="Gas"),this.categories}catch(a){this.handleError(a)}finally{this.loading=!1}},async fetchStation(a){try{return this.loading=!0,(await s.get(`/station/${a}`)).data.data}catch(t){this.handleError(t)}finally{this.loading=!1}},async createStation(a){try{this.loading=!0;const t=await s.post("/station",a);this.success=t.data.message,r.push({name:"admin-station"})}catch(t){this.error=e(t)}finally{this.loading=!1}},async updateStation(a){try{this.loading=!0;const t=await s.post(`/station/${a.id}`,a);this.success=t.data.message,r.push({name:"admin-station"})}catch(t){this.error=e(t)}finally{this.loading=!1}},async deleteStation(a){try{this.loading=!0;const t=await s.delete(`/station/${a}`);this.success=t.data.message}catch(t){this.error=e(t)}finally{this.loading=!1}},async activateStation(a,t){try{this.loading=!0;const i=await s.post(`/station/active/${a}`,t);this.success=i.data.message}catch(i){this.error=e(i)}finally{this.loading=!1}}}});export{c as u};
